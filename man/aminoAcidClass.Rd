% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chemistry.R
\name{aminoAcidClass}
\alias{aminoAcidClass}
\title{R6 Class representing a set of amino acids}
\description{
R6 Class representing a set of amino acids. It adds three functions to quickly
 switch between different writing 'styles' of peptides
}
\details{
Note: this class is meant to be used only for amino acids and such
}
\examples{
aminoAcidResidues()$getShort("L")
aminoAcidResidues()$getShort("Leu")
aminoAcidResidues()$getName("L")
aminoAcidResidues()$getName("Leu")
aminoAcidResidues()$translatePeptide("Asp-Arg-Val-Tyr-Ile-His-Pro-Phe-His-Leu",
 from1to3 = TRUE, splitCharacter ="-")
aminoAcidResidues()$translatePeptide("DRVYIHPFHL", joinCharacter = "-")
                                                   
}
\section{Super class}{
\code{\link[massSpectrometryR:chemicals]{massSpectrometryR::chemicals}} -> \code{aminoacids}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-aminoacids-getName}{\code{aminoAcidClass$getName()}}
\item \href{#method-aminoacids-getShort}{\code{aminoAcidClass$getShort()}}
\item \href{#method-aminoacids-translatePeptide}{\code{aminoAcidClass$translatePeptide()}}
\item \href{#method-aminoacids-clone}{\code{aminoAcidClass$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="massSpectrometryR" data-topic="chemicals" data-id="getFormula"><a href='../../massSpectrometryR/html/chemicals.html#method-chemicals-getFormula'><code>massSpectrometryR::chemicals$getFormula()</code></a></span></li>
<li><span class="pkg-link" data-pkg="massSpectrometryR" data-topic="chemicals" data-id="initialize"><a href='../../massSpectrometryR/html/chemicals.html#method-chemicals-initialize'><code>massSpectrometryR::chemicals$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="massSpectrometryR" data-topic="chemicals" data-id="print"><a href='../../massSpectrometryR/html/chemicals.html#method-chemicals-print'><code>massSpectrometryR::chemicals$print()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-aminoacids-getName"></a>}}
\if{latex}{\out{\hypertarget{method-aminoacids-getName}{}}}
\subsection{Method \code{getName()}}{
Function to retrieve the full name of an amino acid via the letter or shorts
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{aminoAcidClass$getName(searchString, checkCase = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{searchString}}{either a 1- or 3- letter character vector}

\item{\code{checkCase}}{default = TRUE. If false, the function will ignore the case
the searchString argument}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
character vector, name of the aminoacid
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-aminoacids-getShort"></a>}}
\if{latex}{\out{\hypertarget{method-aminoacids-getShort}{}}}
\subsection{Method \code{getShort()}}{
Function to retrieve either the 1- or 3- letter code of an amino acid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{aminoAcidClass$getShort(searchString, checkCase = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{searchString}}{either a 1- or 3- letter character vector: if 1-letter
than the corresponding 3-letter character vector will be returned and vice
versa}

\item{\code{checkCase}}{default = TRUE. If false, the function will ignore the case
the searchString argument}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
character vector, 1- or 3- letter code of the aminoacid
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-aminoacids-translatePeptide"></a>}}
\if{latex}{\out{\hypertarget{method-aminoacids-translatePeptide}{}}}
\subsection{Method \code{translatePeptide()}}{
Translates a amino acid sequence from 1-letter codes to 3-letter codes and
 vice versa
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{aminoAcidClass$translatePeptide(
  sequence,
  from1to3 = FALSE,
  splitCharacter = NA,
  joinCharacter = NA,
  checkCase = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sequence}}{character vector: amino acid sequence in 1-letter or
3-letter codes}

\item{\code{from1to3}}{logical vector: if TRUE, then translation will be from
1-letter code to 3=letter code. If FALSE, then vice versa. Default = FALSE}

\item{\code{splitCharacter}}{character vector specifying the character(s) between
the 1- or 3-letter codes in the sequence. Default NA (same as "")}

\item{\code{joinCharacter}}{character vector specifying the character(s) between
the translated codes. Default NA (same as "")}

\item{\code{checkCase}}{default = TRUE. If false, the function will ignore the case
the sequence}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
character vector, sequence in either 1- or 3-letter codes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-aminoacids-clone"></a>}}
\if{latex}{\out{\hypertarget{method-aminoacids-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{aminoAcidClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
